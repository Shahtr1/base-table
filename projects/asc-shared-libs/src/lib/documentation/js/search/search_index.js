var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AscSharedLibsComponent.html",[0,1.46,1,1.46]],["body/components/AscSharedLibsComponent.html",[0,2.38,1,2.518,2,3.101,3,0.617,4,0.617,5,2.793,6,2.793,7,0.406,8,0.343,9,0.541,10,2.092,11,2.793,12,2.793,13,3.186,14,4.254,15,3.442,16,4.412,17,0.617,18,0.04,19,0.782,20,2.793,21,2.793,22,0.472,23,0.542,24,2.092,25,3.622,26,3.622,27,2.793,28,4.254,29,2.793,30,1.262,31,2.793,32,1.653,33,2.391,34,1.852,35,2.793,36,2.793,37,0.03,38,0.03]],["title/modules/AscSharedLibsModule.html",[39,2.111,40,1.847]],["body/modules/AscSharedLibsModule.html",[1,2.643,3,0.4,4,0.4,7,0.263,8,0.222,9,0.392,10,1.356,15,1.551,17,1.05,18,0.041,19,0.507,22,0.306,23,0.352,24,1.356,32,2.643,33,1.551,37,0.022,38,0.022,39,1.551,40,3.258,41,1.551,42,1.201,43,3.19,44,1.811,45,1.811,46,3.19,47,1.811,48,1.811,49,1.811,50,2.68,51,1.811,52,1.811,53,2.206,54,3.264,55,2.206,56,3.264,57,3.264,58,1.811,59,3.264,60,1.811,61,2.206,62,1.551,63,2.206,64,3.264,65,2.206,66,3.264,67,2.206,68,3.264,69,2.206,70,3.264,71,2.206,72,3.264,73,2.206,74,3.264,75,2.206,76,3.264,77,2.206,78,3.264,79,2.206,80,3.264,81,2.206,82,2.206,83,3.19,84,1.201,85,2.206,86,2.206,87,2.68,88,2.206,89,1.811,90,1.201,91,2.206,92,1.152,93,2.206,94,3.264,95,2.206,96,3.264,97,2.206,98,3.264,99,2.206,100,2.206,101,2.206,102,2.206,103,2.206,104,1.551,105,2.206,106,1.356,107,2.206]],["title/injectables/AscSharedLibsService.html",[108,0.358,109,2.111]],["body/injectables/AscSharedLibsService.html",[3,0.719,4,0.719,7,0.473,8,0.49,9,0.552,10,2.988,17,0.719,18,0.04,19,0.911,22,0.55,23,0.632,37,0.033,38,0.033,108,0.58,109,3.416,110,1.399,111,3.255,112,2.554,113,1.018,114,3.965,115,1.728,116,1.728]],["title/components/BaseTableComponent.html",[0,1.46,32,1.46]],["body/components/BaseTableComponent.html",[0,2.155,1,1.359,2,2.719,3,0.507,4,0.507,5,2.295,6,2.295,7,0.334,8,0.282,9,0.39,12,2.295,13,2.943,14,3.929,15,1.965,17,0.701,18,0.041,19,0.642,20,2.295,21,2.295,22,0.388,23,0.446,24,1.719,25,3.175,26,3.175,27,2.295,28,3.929,29,2.295,30,1.106,31,2.295,32,2.326,33,3.818,34,2.415,35,2.295,36,2.295,37,0.026,38,0.026,62,1.965,117,2.295,118,2.295,119,3.868,120,4.435,121,3.868,122,3.868,123,2.795,124,2.795,125,2.795,126,2.795,127,1.359,128,2.795,129,3.868,130,3.868,131,2.795,132,2.795,133,2.795,134,2.795,135,2.795,136,2.795,137,2.795,138,2.795,139,2.795,140,2.795,141,2.795,142,2.795,143,2.719,144,2.795,145,2.795,146,2.795,147,2.795,148,3.868,149,2.295]],["title/injectables/FakeLabelService.html",[108,0.358,150,1.636]],["body/injectables/FakeLabelService.html",[3,0.498,4,0.498,7,0.327,8,0.385,9,0.385,17,0.861,18,0.04,19,0.631,22,0.53,23,0.438,30,1.546,37,0.026,38,0.026,92,1.676,108,0.456,110,0.969,113,0.705,115,1.196,116,1.196,150,2.08,151,3.135,152,2.253,153,0.498,154,1.214,155,2.745,156,0.872,157,1.722,158,2.08,159,2.253,160,0.785,161,1.076,162,1.334,163,1.196,164,1.688,165,1.076,166,2.253,167,2.745,168,2.253,169,2.745,170,1.664,171,2.745,172,1.688,173,2.745,174,2.745,175,1.93,176,3.819,177,2.253,178,2.745,179,2.745,180,2.745,181,2.745,182,2.745,183,2.745,184,2.745,185,2.253,186,2.745,187,2.745,188,2.253,189,3.819,190,2.253,191,3.819,192,2.253,193,3.819,194,2.253,195,3.819,196,3.819,197,2.745,198,3.819,199,2.745,200,2.745,201,2.745,202,2.685,203,2.745,204,2.745,205,2.745,206,1.495,207,2.745,208,2.745,209,2.745,210,2.745,211,2.745,212,3.135,213,2.745,214,4.992,215,2.253,216,2.253,217,2.253,218,2.253]],["title/injectables/FakeRequestService.html",[108,0.358,219,1.847]],["body/injectables/FakeRequestService.html",[3,0.393,4,0.393,7,0.259,8,0.43,9,0.43,17,0.825,18,0.041,19,0.498,22,0.301,23,0.346,30,0.922,34,1.181,37,0.022,38,0.022,108,0.385,110,0.766,113,0.988,115,0.945,116,0.945,127,1.054,153,0.393,154,1.025,156,1.025,157,1.508,160,0.62,164,1.334,165,0.85,168,1.781,170,1.405,206,2.873,219,2.366,220,2.619,221,1.781,222,1.567,223,2.079,224,3.848,225,3.848,226,2.07,227,2.169,228,2.634,229,3.645,230,3.037,231,3.645,232,3.188,233,2.169,234,1.405,235,0.828,236,1.405,237,3.354,238,1.781,239,1.525,240,2.169,241,2.266,242,1.181,243,2.705,244,2.169,245,1.755,246,1.781,247,1.334,248,1.525,249,2.169,250,2.169,251,4.26,252,2.169,253,1.781,254,2.169,255,2.169,256,2.169,257,2.169,258,2.169,259,2.169,260,1.781,261,2.169,262,2.169,263,2.169,264,2.169,265,2.169,266,2.169,267,2.169]],["title/classes/GetLabels.html",[23,0.479,92,1.06]],["body/classes/GetLabels.html",[3,0.653,4,0.653,7,0.43,8,0.462,9,0.462,18,0.041,22,0.635,23,0.73,37,0.031,38,0.031,92,1.616,113,0.925,127,1.751,153,0.653,161,1.412,172,2.216,212,2.958,222,2.225,228,1.751,235,1.403,242,1.962,268,2.533,269,2.958,270,3.722,271,5.294,272,4.131,273,3.604,274,2.958,275,3.604,276,3.604,277,3.604]],["title/interfaces/ILabelService.html",[158,1.636,278,1.636]],["body/interfaces/ILabelService.html",[3,0.707,4,0.707,7,0.465,8,0.485,9,0.485,17,0.872,18,0.04,22,0.541,37,0.033,38,0.033,92,1.922,113,1.001,153,0.707,154,1.528,156,1.239,157,2.044,158,2.618,160,1.114,161,1.527,162,1.894,163,1.698,278,2.122,279,2.74,280,3.199,281,3.897]],["title/interfaces/IRequestService.html",[245,1.636,278,1.636]],["body/interfaces/IRequestService.html",[3,0.626,4,0.626,7,0.412,8,0.449,9,0.449,17,0.808,18,0.04,22,0.479,30,0.988,37,0.03,38,0.03,113,0.887,153,0.626,154,1.416,156,1.098,157,1.933,160,0.988,206,2.686,226,2.397,228,2.684,229,3.467,230,3.204,231,3.467,232,3.033,234,1.505,235,0.887,236,1.505,237,3.132,239,2.428,241,3.132,245,2.426,247,2.123,278,1.88,279,2.428,282,2.835,283,3.453]],["title/injectables/LabelService.html",[108,0.358,284,1.636]],["body/injectables/LabelService.html",[3,0.653,4,0.653,7,0.43,8,0.462,9,0.462,17,0.96,18,0.041,19,0.828,22,0.5,23,0.574,37,0.031,38,0.031,92,1.869,108,0.546,110,1.272,113,0.925,115,1.571,116,1.571,153,0.653,154,1.455,156,1.145,157,1.972,158,2.493,159,2.958,160,1.031,161,1.412,162,1.751,163,1.571,164,2.216,165,1.412,284,2.493,285,2.958,286,3.604]],["title/injectables/LabelState.html",[90,1.636,108,0.358]],["body/injectables/LabelState.html",[3,0.395,4,0.395,7,0.26,8,0.46,9,0.46,13,2.372,17,0.921,18,0.041,19,0.501,22,0.449,23,0.516,30,1.221,37,0.022,38,0.022,84,1.187,90,1.762,92,1.687,106,2.625,108,0.386,110,0.769,112,1.572,113,1.096,150,2.767,153,0.395,154,1.028,156,1.028,160,0.623,161,1.673,162,1.572,163,0.95,165,1.512,170,0.95,223,1.682,234,1.682,235,0.991,236,1.682,270,2.712,284,2.767,287,1.532,288,2.656,289,2.179,290,3.167,291,2.179,292,2.656,293,2.656,294,2.625,295,3.235,296,2.179,297,3.206,298,2.179,299,3.505,300,2.656,301,2.179,302,2.179,303,2.179,304,1.789,305,1.532,306,1.789,307,1.789,308,1.789,309,1.789,310,1.789,311,1.34,312,1.532,313,1.789,314,1.532,315,1.789,316,1.789,317,1.789,318,1.789,319,2.656,320,2.656,321,1.789,322,1.789,323,1.532,324,1.789,325,1.532,326,2.372,327,1.532,328,1.532,329,1.532,330,1.34]],["title/classes/LabelStateModel.html",[23,0.479,294,1.847]],["body/classes/LabelStateModel.html",[3,0.459,4,0.459,7,0.302,8,0.364,9,0.364,13,2.218,17,0.96,18,0.042,19,0.582,22,0.501,23,0.575,30,0.724,37,0.025,38,0.025,84,1.378,90,1.378,92,1.273,106,3.096,108,0.43,112,1.23,113,0.65,127,1.23,150,2.495,153,0.459,160,0.724,161,1.796,162,1.753,163,1.103,165,1.647,170,1.103,222,1.753,223,1.832,235,0.65,242,1.378,268,1.779,270,1.779,284,2.495,287,1.779,290,2.078,292,2.078,293,2.078,294,2.584,297,3.221,299,2.961,300,2.078,304,2.078,305,1.779,306,2.078,307,2.078,308,2.078,309,2.078,310,2.078,311,1.556,312,1.779,313,2.078,314,1.779,315,2.078,316,2.078,317,2.078,318,2.078,319,2.961,320,2.961,321,2.078,322,2.078,323,1.779,324,2.078,325,1.779,326,2.584,327,1.779,328,1.779,329,1.779,330,1.556,331,2.531]],["title/injectables/RequestService.html",[108,0.358,332,1.847]],["body/injectables/RequestService.html",[3,0.294,4,0.294,7,0.194,8,0.466,9,0.466,17,0.723,18,0.041,19,0.373,22,0.225,23,0.259,30,1.141,37,0.018,38,0.018,104,1.141,108,0.308,110,0.573,112,0.789,113,1.143,115,0.707,116,0.707,127,1.56,153,0.294,154,0.82,156,1.162,157,1.563,160,0.464,164,0.998,165,1.563,170,1.124,175,1.141,206,2.656,222,1.254,223,2.074,226,1.777,228,2.61,229,2.986,230,2.248,231,3.429,232,2.841,234,1.739,235,1.09,236,1.941,237,2.986,238,2.118,239,1.141,241,2.57,242,1.748,245,1.405,246,1.333,247,0.998,260,2.635,326,2.453,332,1.586,333,1.333,334,3.989,335,4.453,336,2.579,337,2.579,338,1.623,339,3.656,340,2.579,341,2.579,342,2.579,343,1.623,344,2.579,345,1.623,346,1.623,347,2.579,348,3.001,349,2.579,350,2.635,351,1.623,352,1.623,353,2.579,354,1.623,355,1.623,356,1.623,357,2.579,358,1.623,359,1.623,360,1.623,361,1.623,362,2.579,363,2.579,364,3.21,365,2.579,366,1.623,367,2.579,368,3.21,369,1.623,370,1.623,371,1.623,372,1.333,373,1.623,374,1.623,375,3.21,376,1.623,377,1.623,378,1.623,379,1.333,380,1.813,381,1.623,382,1.333,383,1.623,384,1.623,385,1.623,386,1.623]],["title/injectables/TableConfigService.html",[108,0.358,387,2.111]],["body/injectables/TableConfigService.html",[3,0.447,4,0.447,7,0.294,8,0.456,9,0.456,17,0.905,18,0.041,19,0.566,22,0.342,23,0.393,30,1.012,34,1.341,37,0.024,38,0.024,108,0.422,110,0.869,112,1.719,113,1.063,115,1.073,116,1.073,153,0.447,154,1.124,156,0.783,157,1.622,160,0.704,163,1.073,165,1.622,170,1.073,219,3.16,223,1.804,228,2.012,234,1.542,235,0.908,236,1.542,253,2.022,288,2.904,305,1.731,312,1.731,314,1.731,323,1.731,325,1.731,326,2.545,327,1.731,328,1.731,329,1.731,330,1.514,332,3.16,387,2.487,388,3.714,389,2.022,390,3.537,391,2.463,392,4.139,393,2.463,394,3.537,395,3.537,396,2.463,397,3.537,398,3.537,399,2.463,400,2.463,401,2.463,402,2.022,403,2.463,404,2.463,405,2.487,406,3.537,407,1.731,408,2.463,409,2.463,410,2.463,411,2.463,412,1.731,413,2.463,414,2.463,415,2.463,416,2.463,417,2.463,418,2.463,419,2.463,420,2.463,421,2.463,422,2.463]],["title/injectables/TextService.html",[108,0.358,423,2.111]],["body/injectables/TextService.html",[3,0.413,4,0.413,7,0.272,8,0.468,9,0.468,17,0.842,18,0.041,19,0.523,22,0.316,23,0.363,30,1.132,37,0.023,38,0.023,83,3.986,84,1.24,104,1.601,106,2.985,108,0.399,110,0.804,112,1.107,113,1.12,115,0.993,116,0.993,153,0.413,154,1.062,156,1.258,157,1.903,160,0.651,161,1.709,162,1.107,163,0.993,165,1.709,206,2.156,223,2.116,234,1.725,235,1.016,236,1.725,247,1.4,272,1.87,297,1.601,330,2.856,372,1.87,402,1.87,423,2.35,424,1.87,425,3.342,426,3.959,427,4.362,428,2.278,429,2.278,430,3.342,431,4.311,432,2.278,433,3.342,434,2.278,435,2.278,436,1.601,437,2.278,438,1.87,439,2.278,440,3.342,441,2.278,442,2.278,443,2.278,444,2.278,445,2.278,446,2.278,447,2.278,448,2.278,449,2.278,450,2.278,451,2.278,452,3.342,453,1.87,454,2.278,455,3.342,456,2.278,457,3.342,458,2.278,459,2.278]],["title/coverage.html",[460,3.335]],["body/coverage.html",[0,1.531,1,1.022,7,0.251,8,0.588,9,0.591,10,1.938,11,1.727,18,0.04,23,0.502,32,1.022,34,1.146,37,0.021,38,0.021,62,1.479,90,1.146,92,0.743,108,0.6,109,1.479,111,1.727,117,1.727,118,1.727,150,1.146,151,1.727,152,1.727,158,1.146,170,0.917,219,1.294,220,2.323,221,1.727,226,1.531,235,0.54,243,1.479,245,1.146,248,1.479,269,1.727,278,1.716,280,1.727,282,1.727,284,1.146,285,1.727,287,2.215,294,1.294,311,1.294,332,1.294,333,1.727,387,1.479,388,1.727,389,1.727,407,1.479,423,1.479,424,1.727,460,1.727,461,2.104,462,2.104,463,2.104,464,5.831,465,5.497,466,4.89,467,2.587,468,3.778,469,1.727,470,1.727,471,1.479,472,4.129,473,5.143,474,3.438,475,1.727,476,1.727,477,1.727,478,1.727,479,1.727,480,1.727,481,2.215,482,3.151,483,2.104,484,2.104,485,2.104,486,2.104]],["title/dependencies.html",[42,1.962,487,2.074]],["body/dependencies.html",[7,0.364,18,0.041,19,0.7,37,0.028,38,0.028,42,1.66,58,2.502,60,3.369,84,1.66,87,2.502,89,2.502,154,0.969,160,0.872,223,1.328,488,3.048,489,3.048,490,3.048,491,4.104,492,3.048,493,5.542,494,3.048,495,3.048,496,3.369,497,2.502,498,3.048,499,3.048,500,3.048,501,3.048,502,3.048,503,3.048,504,4.104,505,3.048,506,3.048,507,2.502,508,3.048,509,3.369,510,3.048,511,2.502,512,3.048,513,3.048,514,3.048,515,3.048,516,3.048,517,3.048,518,3.048,519,3.048,520,3.048,521,3.048,522,3.048,523,3.048,524,3.048,525,4.104,526,3.048,527,3.048,528,3.048,529,3.048,530,3.048,531,3.048,532,3.048,533,3.048,534,3.048,535,3.048,536,3.048,537,3.048]],["title/miscellaneous/functions.html",[538,1.228,539,2.957]],["body/miscellaneous/functions.html",[8,0.489,9,0.489,18,0.037,30,1.129,37,0.033,38,0.033,153,0.716,156,1.255,220,2.427,226,2.355,228,2.549,234,1.72,235,1.014,236,1.72,243,3.687,467,3.241,469,4.306,470,3.979,481,3.407,538,1.919,539,3.241,540,4.847,541,3.241,542,3.948,543,3.241]],["title/index.html",[153,0.458,544,2.074,545,2.074]],["body/index.html",[7,0.588,18,0.04,37,0.034,38,0.034,42,2.207,172,2.492,232,2.492,507,3.327,509,4.043,511,3.327,546,4.053,547,4.053,548,4.053,549,4.053,550,4.053,551,4.053,552,4.053,553,4.053,554,4.053,555,4.053,556,4.053,557,4.053,558,4.053,559,4.053,560,4.053,561,4.053]],["title/modules.html",[41,2.856]],["body/modules.html",[18,0.036,37,0.036,38,0.036,40,2.791,41,3.191,496,3.726,562,4.539,563,4.539,564,4.539]],["title/overview.html",[565,3.335]],["body/overview.html",[1,2.775,2,2.606,18,0.038,24,2.279,32,2.775,37,0.032,38,0.032,39,3.276,40,3.551,42,2.018,43,3.043,44,3.043,45,3.043,46,3.043,47,3.043,48,3.043,49,3.043,50,3.826,51,3.043,52,3.043,110,1.308,268,2.606,279,2.606,565,3.043,566,3.707,567,5.098,568,3.707]],["title/properties.html",[222,1.751,487,2.074]],["body/properties.html",[18,0.038,37,0.036,38,0.036,222,2.228,569,4.584,570,4.584]],["title/todo.html",[436,1.776,544,2.074,545,2.074]],["body/todo.html",[0,1.886,17,0.704,18,0.033,22,0.539,37,0.033,38,0.033,149,3.186,172,3.499,177,3.937,436,2.728,438,3.186,453,3.186,497,3.186,571,5.205,572,3.88,573,4.273,574,3.88,575,3.88,576,3.88,577,3.88,578,3.88,579,3.88,580,3.88,581,3.186,582,3.186,583,3.88,584,3.88,585,3.186,586,3.88,587,3.88,588,3.88,589,3.88,590,3.186]],["title/miscellaneous/typealiases.html",[538,1.228,591,3.602]],["body/miscellaneous/typealiases.html",[8,0.459,9,0.459,18,0.041,37,0.027,38,0.027,143,2.067,153,0.533,161,1.569,175,2.067,202,3.201,230,2.462,235,1.386,350,2.414,379,2.414,380,2.815,382,2.414,405,2.815,431,3.287,471,2.067,474,2.067,538,1.429,585,2.414,592,2.94,593,4.004,594,4.004,595,4.433,596,5.636,597,4.004,598,2.414,599,3.287,600,4.004,601,4.004,602,4.004,603,2.94,604,5.278,605,2.94,606,2.94,607,2.94,608,3.287,609,2.94,610,3.287,611,2.94,612,2.414,613,2.94,614,2.94,615,2.94,616,2.94,617,2.94,618,2.94,619,2.94]],["title/miscellaneous/variables.html",[412,2.532,538,1.228]],["body/miscellaneous/variables.html",[8,0.346,9,0.346,18,0.04,22,0.388,37,0.019,38,0.019,127,2.39,143,1.265,153,0.326,166,1.478,185,1.478,188,1.478,190,1.478,192,1.478,194,1.478,202,2.412,215,1.478,216,1.478,217,1.478,218,1.478,220,1.107,226,1.36,235,1.139,242,2.678,248,1.967,274,1.478,311,1.72,348,2.817,380,1.967,405,1.265,407,1.967,412,1.265,471,1.265,472,4.126,474,1.265,475,2.297,476,2.817,477,2.297,478,2.297,479,2.297,480,2.817,481,1.967,538,0.875,541,1.478,543,3.441,573,2.297,581,1.478,582,2.297,590,3.441,595,3.802,598,1.478,599,1.478,608,2.297,610,2.297,612,1.478,620,3.87,621,4.191,622,4.788,623,1.8,624,3.432,625,2.798,626,1.8,627,3.432,628,2.798,629,1.8,630,1.8,631,1.8,632,1.8,633,1.8,634,1.8,635,1.8,636,1.8,637,1.8,638,1.8,639,1.8,640,1.8,641,4.437,642,3.432,643,4.437,644,3.87,645,5.514,646,4.191,647,1.8,648,1.8,649,2.798,650,2.798,651,1.8,652,1.8,653,2.798,654,2.798,655,1.8,656,1.8,657,2.798,658,2.798,659,2.798,660,1.8,661,1.8,662,2.798,663,2.798,664,1.8,665,1.8,666,1.8,667,1.8,668,2.798,669,2.798,670,1.8,671,1.8,672,1.8,673,1.8,674,2.798,675,1.8,676,1.8,677,1.8,678,5.199,679,1.8,680,1.8,681,1.8,682,1.8,683,1.8,684,1.8,685,1.8,686,1.8,687,1.8]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":570,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["0.19.3.tgz",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["0.19.3/xlsx",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":566,"title":{},"body":{"overview.html":{}}}],["1.1.21",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["1.3.7",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":265,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["16.1.0",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["16.1.7",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":567,"title":{},"body":{"overview.html":{}}}],["2.0.5",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["2rem",{"_index":148,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["3.1.3",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["3.21.4",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["3.5.31",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["7.18.6",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":568,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["accessors",{"_index":288,"title":{},"body":{"injectables/LabelState.html":{},"injectables/TableConfigService.html":{}}}],["account",{"_index":167,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["action",{"_index":304,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["action(getlabels",{"_index":300,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["actioncolumn",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions/label.action",{"_index":306,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["active",{"_index":210,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["actual_component",{"_index":36,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["add",{"_index":172,"title":{},"body":{"injectables/FakeLabelService.html":{},"classes/GetLabels.html":{},"index.html":{},"todo.html":{}}}],["addcallback",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addlabel",{"_index":275,"title":{},"body":{"classes/GetLabels.html":{}}}],["addurl",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":135,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["allowedcommonjsdependencies",{"_index":557,"title":{},"body":{"index.html":{}}}],["angular",{"_index":554,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":547,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":354,"title":{},"body":{"injectables/RequestService.html":{}}}],["angular/compiler",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":19,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":58,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":60,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular:browser",{"_index":556,"title":{},"body":{"index.html":{}}}],["answer",{"_index":443,"title":{},"body":{"injectables/TextService.html":{}}}],["api/v5/account",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v5/app",{"_index":416,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["api/v5/work",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiendpoint",{"_index":237,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{}}}],["applylabel",{"_index":425,"title":{},"body":{"injectables/TextService.html":{}}}],["applylabel(data",{"_index":430,"title":{},"body":{"injectables/TextService.html":{}}}],["architect",{"_index":551,"title":{},"body":{"index.html":{}}}],["asc",{"_index":15,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{}}}],["ascsharedlibscomponent",{"_index":1,"title":{"components/AscSharedLibsComponent.html":{}},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ascsharedlibsmodule",{"_index":40,"title":{"modules/AscSharedLibsModule.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"modules.html":{},"overview.html":{}}}],["ascsharedlibsservice",{"_index":109,"title":{"injectables/AscSharedLibsService.html":{}},"body":{"injectables/AscSharedLibsService.html":{},"coverage.html":{}}}],["ascworkspace",{"_index":546,"title":{},"body":{"index.html":{}}}],["autotable",{"_index":511,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["babel/plugin",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":33,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{}}}],["basetablecomponent",{"_index":32,"title":{"components/BaseTableComponent.html":{}},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{},"coverage.html":{},"overview.html":{}}}],["below",{"_index":441,"title":{},"body":{"injectables/TextService.html":{}}}],["best",{"_index":444,"title":{},"body":{"injectables/TextService.html":{}}}],["between",{"_index":134,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["body",{"_index":260,"title":{},"body":{"injectables/FakeRequestService.html":{},"injectables/RequestService.html":{}}}],["boolean",{"_index":350,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["browse",{"_index":564,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":496,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":61,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["browseranimationsmodule",{"_index":59,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["build",{"_index":552,"title":{},"body":{"index.html":{}}}],["builder",{"_index":553,"title":{},"body":{"index.html":{}}}],["button",{"_index":143,"title":{},"body":{"components/BaseTableComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button.p",{"_index":142,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["buttonmodule",{"_index":68,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["calendar",{"_index":615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canvg",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["caption",{"_index":126,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["catch",{"_index":325,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["catcherror",{"_index":355,"title":{},"body":{"injectables/RequestService.html":{}}}],["catcherror(this.handleerror",{"_index":374,"title":{},"body":{"injectables/RequestService.html":{}}}],["cell",{"_index":584,"title":{},"body":{"todo.html":{}}}],["center",{"_index":137,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["check",{"_index":588,"title":{},"body":{"todo.html":{}}}],["checkbox",{"_index":612,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["checkboxmodule",{"_index":80,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["chips",{"_index":616,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["class",{"_index":23,"title":{"classes/GetLabels.html":{},"classes/LabelStateModel.html":{}},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{}}}],["classes",{"_index":268,"title":{},"body":{"classes/GetLabels.html":{},"classes/LabelStateModel.html":{},"overview.html":{}}}],["client",{"_index":379,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{}}}],["cluster_ascsharedlibsmodule",{"_index":47,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["cluster_ascsharedlibsmodule_declarations",{"_index":48,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["cluster_ascsharedlibsmodule_exports",{"_index":49,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["code",{"_index":383,"title":{},"body":{"injectables/RequestService.html":{}}}],["color",{"_index":614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["columnresizemode",{"_index":578,"title":{},"body":{"todo.html":{}}}],["columns",{"_index":573,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["common/scss/variables",{"_index":124,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["commonjs",{"_index":550,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{},"coverage.html":{},"todo.html":{}}}],["component_template",{"_index":29,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{},"overview.html":{}}}],["config.model",{"_index":163,"title":{},"body":{"injectables/FakeLabelService.html":{},"interfaces/ILabelService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["config.model.ts",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["config.schema",{"_index":312,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["config.schema.ts",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.service.ts",{"_index":389,"title":{},"body":{"injectables/TableConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":393,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:18",{"_index":400,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["config.service.ts:22",{"_index":396,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["console.info('dispatching",{"_index":105,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["console.log",{"_index":267,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["console.log('environment",{"_index":411,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["const",{"_index":330,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["constructor(http",{"_index":338,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(private",{"_index":104,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"injectables/RequestService.html":{},"injectables/TextService.html":{}}}],["constructor(public",{"_index":276,"title":{},"body":{"classes/GetLabels.html":{}}}],["constructor(reallabelservice",{"_index":289,"title":{},"body":{"injectables/LabelState.html":{}}}],["constructor(restapi",{"_index":391,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["constructor(store",{"_index":428,"title":{},"body":{"injectables/TextService.html":{}}}],["content",{"_index":132,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["convert",{"_index":426,"title":{},"body":{"injectables/TextService.html":{}}}],["convert(data",{"_index":433,"title":{},"body":{"injectables/TextService.html":{}}}],["core",{"_index":559,"title":{},"body":{"index.html":{}}}],["count",{"_index":264,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["coverage",{"_index":460,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":206,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"injectables/TextService.html":{}}}],["data.hasownproperty(key",{"_index":454,"title":{},"body":{"injectables/TextService.html":{}}}],["data.ts",{"_index":481,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data[key",{"_index":372,"title":{},"body":{"injectables/RequestService.html":{},"injectables/TextService.html":{}}}],["data[key].labelid",{"_index":456,"title":{},"body":{"injectables/TextService.html":{}}}],["date",{"_index":589,"title":{},"body":{"todo.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["decorators",{"_index":295,"title":{},"body":{"injectables/LabelState.html":{}}}],["deep",{"_index":140,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/BaseTableComponent.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":313,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["defined",{"_index":113,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["definition",{"_index":254,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["delete",{"_index":175,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{}}}],["deleteurl",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designs",{"_index":253,"title":{},"body":{"injectables/FakeRequestService.html":{},"injectables/TableConfigService.html":{}}}],["destroy",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["devkit/build",{"_index":555,"title":{},"body":{"index.html":{}}}],["directive",{"_index":27,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["directives",{"_index":35,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["display",{"_index":129,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["documentation",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["draggable",{"_index":574,"title":{},"body":{"todo.html":{}}}],["dropdownmodule",{"_index":94,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["duplicate",{"_index":587,"title":{},"body":{"todo.html":{}}}],["dynamic",{"_index":497,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["editcallback",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor",{"_index":585,"title":{},"body":{"todo.html":{},"miscellaneous/typealiases.html":{}}}],["editurl",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":26,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["enter",{"_index":214,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["entries",{"_index":184,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["env",{"_index":392,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["environment",{"_index":290,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["error",{"_index":326,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{}}}],["error(`data",{"_index":328,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["error(errormessage",{"_index":386,"title":{},"body":{"injectables/RequestService.html":{}}}],["error.error",{"_index":376,"title":{},"body":{"injectables/RequestService.html":{}}}],["error.error.message",{"_index":381,"title":{},"body":{"injectables/RequestService.html":{}}}],["error.message",{"_index":385,"title":{},"body":{"injectables/RequestService.html":{}}}],["error.status}\\nmessage",{"_index":384,"title":{},"body":{"injectables/RequestService.html":{}}}],["errorevent",{"_index":378,"title":{},"body":{"injectables/RequestService.html":{}}}],["errormessage",{"_index":375,"title":{},"body":{"injectables/RequestService.html":{}}}],["es",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["excel",{"_index":580,"title":{},"body":{"todo.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["fake",{"_index":249,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["fakelabelservice",{"_index":150,"title":{"injectables/FakeLabelService.html":{}},"body":{"injectables/FakeLabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["fakerequestservice",{"_index":219,"title":{"injectables/FakeRequestService.html":{}},"body":{"injectables/FakeRequestService.html":{},"injectables/TableConfigService.html":{},"coverage.html":{}}}],["false",{"_index":348,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["fileuploadmodule",{"_index":74,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["filter",{"_index":590,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":181,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["firstcolumnfrozen",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fix",{"_index":571,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":130,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["flow",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":56,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["found",{"_index":207,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["frozen",{"_index":575,"title":{},"body":{"todo.html":{}}}],["full",{"_index":193,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["fullname",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":579,"title":{},"body":{"todo.html":{}}}],["functions",{"_index":539,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generaltext",{"_index":431,"title":{},"body":{"injectables/TextService.html":{},"miscellaneous/typealiases.html":{}}}],["get(apiendpoint",{"_index":342,"title":{},"body":{"injectables/RequestService.html":{}}}],["getaccountpurposedata",{"_index":243,"title":{},"body":{"injectables/FakeRequestService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlabels",{"_index":92,"title":{"classes/GetLabels.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"injectables/FakeLabelService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["getlabels(state",{"_index":293,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["getlabels(undefined",{"_index":298,"title":{},"body":{"injectables/LabelState.html":{}}}],["getlabelservice",{"_index":302,"title":{},"body":{"injectables/LabelState.html":{}}}],["getlabelsfromstate",{"_index":427,"title":{},"body":{"injectables/TextService.html":{}}}],["getrequestservice",{"_index":399,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["getstate",{"_index":319,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["getting",{"_index":544,"title":{"index.html":{},"todo.html":{}},"body":{}}],["globalsearch",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handleerror",{"_index":336,"title":{},"body":{"injectables/RequestService.html":{}}}],["handleerror(error",{"_index":344,"title":{},"body":{"injectables/RequestService.html":{}}}],["header",{"_index":581,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["headerid",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":261,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["height",{"_index":147,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["host",{"_index":125,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["html",{"_index":25,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["http",{"_index":341,"title":{},"body":{"injectables/RequestService.html":{}}}],["httpclient",{"_index":339,"title":{},"body":{"injectables/RequestService.html":{}}}],["httpparams",{"_index":353,"title":{},"body":{"injectables/RequestService.html":{}}}],["https://cdn.sheetjs.com/xlsx",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["httpverbs",{"_index":230,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":144,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["id",{"_index":187,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["identifier",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["ilabel.service",{"_index":159,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/LabelService.html":{}}}],["ilabelservice",{"_index":158,"title":{"interfaces/ILabelService.html":{}},"body":{"injectables/FakeLabelService.html":{},"interfaces/ILabelService.html":{},"injectables/LabelService.html":{},"coverage.html":{}}}],["implements",{"_index":164,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/RequestService.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"todo.html":{}}}],["imports",{"_index":100,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["index",{"_index":153,"title":{"index.html":{}},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["inject",{"_index":305,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["inject('environment",{"_index":314,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["injectable",{"_index":108,"title":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}},"body":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{}}}],["injectables",{"_index":110,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"overview.html":{}}}],["input",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inputfield",{"_index":594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inputfieldschema",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputfieldschema.optional",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inputtextmodule",{"_index":66,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["inputtype",{"_index":597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inputtypeschema",{"_index":476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":377,"title":{},"body":{"injectables/RequestService.html":{}}}],["interface",{"_index":278,"title":{"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{}},"body":{"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"coverage.html":{}}}],["interfaces",{"_index":279,"title":{},"body":{"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"overview.html":{}}}],["irequest.service",{"_index":246,"title":{},"body":{"injectables/FakeRequestService.html":{},"injectables/RequestService.html":{}}}],["irequestservice",{"_index":245,"title":{"interfaces/IRequestService.html":{}},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"coverage.html":{}}}],["isn't",{"_index":437,"title":{},"body":{"injectables/TextService.html":{}}}],["items",{"_index":136,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["js",{"_index":560,"title":{},"body":{"index.html":{}}}],["json",{"_index":363,"title":{},"body":{"injectables/RequestService.html":{}}}],["json.parse(res.body[0]['definition",{"_index":421,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["json.stringify(testbasetabledata",{"_index":255,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["jspdf",{"_index":509,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["justify",{"_index":131,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["key",{"_index":453,"title":{},"body":{"injectables/TextService.html":{},"todo.html":{}}}],["keyword",{"_index":199,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["knob",{"_index":619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["l_account_purpose",{"_index":166,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_account_purpose_full_name",{"_index":192,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_account_purpose_middle_name",{"_index":190,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_account_purpose_short_name",{"_index":188,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_current_page_report_template",{"_index":179,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_default_empty_message",{"_index":205,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_delete_all_selected",{"_index":174,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_enter_full_name",{"_index":217,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_enter_middle_name",{"_index":216,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_enter_reference_name",{"_index":213,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_enter_short_name",{"_index":215,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_enter_trxn_status",{"_index":218,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_export",{"_index":178,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_global_search",{"_index":197,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_is_active",{"_index":209,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_new",{"_index":169,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_new_tooltip",{"_index":171,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_ref_id",{"_index":185,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["l_reference_name",{"_index":211,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_search",{"_index":200,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_select",{"_index":201,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_select_multiple",{"_index":203,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_selected_only",{"_index":208,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["l_trxn_status",{"_index":194,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":272,"title":{},"body":{"classes/GetLabels.html":{},"injectables/TextService.html":{}}}],["label.service",{"_index":309,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["label.service.ts",{"_index":152,"title":{},"body":{"injectables/FakeLabelService.html":{},"coverage.html":{}}}],["label.service.ts:10",{"_index":155,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["labelconfig",{"_index":161,"title":{},"body":{"injectables/FakeLabelService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TextService.html":{},"miscellaneous/typealiases.html":{}}}],["labelconfigschema",{"_index":311,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["labelconfigschema.parse(labelconfig",{"_index":324,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["labelid",{"_index":455,"title":{},"body":{"injectables/TextService.html":{}}}],["labels",{"_index":106,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TextService.html":{}}}],["labels$.pipe",{"_index":448,"title":{},"body":{"injectables/TextService.html":{}}}],["labels[labelid",{"_index":458,"title":{},"body":{"injectables/TextService.html":{}}}],["labelservice",{"_index":284,"title":{"injectables/LabelService.html":{}},"body":{"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["labelstate",{"_index":90,"title":{"injectables/LabelState.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["labelstatemodel",{"_index":294,"title":{"classes/LabelStateModel.html":{}},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["labelvalue",{"_index":457,"title":{},"body":{"injectables/TextService.html":{}}}],["last",{"_index":182,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["lazy",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":24,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{},"overview.html":{}}}],["lib",{"_index":14,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["libs",{"_index":16,"title":{},"body":{"components/AscSharedLibsComponent.html":{}}}],["libs'},{'name",{"_index":31,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["libs.component",{"_index":55,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["libs.component.ts",{"_index":11,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"coverage.html":{}}}],["libs.module.ts",{"_index":53,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["libs.service.ts",{"_index":111,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"coverage.html":{}}}],["libs.service.ts:6",{"_index":114,"title":{},"body":{"injectables/AscSharedLibsService.html":{}}}],["libs/src/lib/asc",{"_index":10,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"coverage.html":{}}}],["libs/src/lib/base",{"_index":117,"title":{},"body":{"components/BaseTableComponent.html":{},"coverage.html":{}}}],["libs/src/lib/common/utils.ts",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["libs/src/lib/model/label",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/src/lib/model/lib.model.ts",{"_index":603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/src/lib/model/table",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/src/lib/services/label/fake",{"_index":151,"title":{},"body":{"injectables/FakeLabelService.html":{},"coverage.html":{}}}],["libs/src/lib/services/label/ilabel.service.ts",{"_index":280,"title":{},"body":{"interfaces/ILabelService.html":{},"coverage.html":{}}}],["libs/src/lib/services/label/ilabel.service.ts:5",{"_index":281,"title":{},"body":{"interfaces/ILabelService.html":{}}}],["libs/src/lib/services/label/label.service.ts",{"_index":285,"title":{},"body":{"injectables/LabelService.html":{},"coverage.html":{}}}],["libs/src/lib/services/label/label.service.ts:10",{"_index":286,"title":{},"body":{"injectables/LabelService.html":{}}}],["libs/src/lib/services/request/fake",{"_index":220,"title":{},"body":{"injectables/FakeRequestService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/src/lib/services/request/irequest.service.ts",{"_index":282,"title":{},"body":{"interfaces/IRequestService.html":{},"coverage.html":{}}}],["libs/src/lib/services/request/irequest.service.ts:5",{"_index":283,"title":{},"body":{"interfaces/IRequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts",{"_index":333,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["libs/src/lib/services/request/request.service.ts:11",{"_index":352,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts:12",{"_index":340,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts:16",{"_index":351,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts:21",{"_index":346,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts:54",{"_index":343,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/request/request.service.ts:76",{"_index":345,"title":{},"body":{"injectables/RequestService.html":{}}}],["libs/src/lib/services/table",{"_index":388,"title":{},"body":{"injectables/TableConfigService.html":{},"coverage.html":{}}}],["libs/src/lib/services/text.service.ts",{"_index":424,"title":{},"body":{"injectables/TextService.html":{},"coverage.html":{}}}],["libs/src/lib/services/text.service.ts:10",{"_index":429,"title":{},"body":{"injectables/TextService.html":{}}}],["libs/src/lib/services/text.service.ts:17",{"_index":434,"title":{},"body":{"injectables/TextService.html":{}}}],["libs/src/lib/services/text.service.ts:27",{"_index":435,"title":{},"body":{"injectables/TextService.html":{}}}],["libs/src/lib/services/text.service.ts:33",{"_index":432,"title":{},"body":{"injectables/TextService.html":{}}}],["libs/src/lib/store/actions/label.action.ts",{"_index":269,"title":{},"body":{"classes/GetLabels.html":{},"coverage.html":{}}}],["libs/src/lib/store/actions/label.action.ts:2",{"_index":273,"title":{},"body":{"classes/GetLabels.html":{}}}],["libs/src/lib/store/state/label.state.ts",{"_index":287,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"coverage.html":{}}}],["libs/src/lib/store/state/label.state.ts:11",{"_index":331,"title":{},"body":{"classes/LabelStateModel.html":{}}}],["libs/src/lib/store/state/label.state.ts:21",{"_index":291,"title":{},"body":{"injectables/LabelState.html":{}}}],["libs/src/lib/store/state/label.state.ts:28",{"_index":303,"title":{},"body":{"injectables/LabelState.html":{}}}],["libs/src/lib/store/state/label.state.ts:35",{"_index":296,"title":{},"body":{"injectables/LabelState.html":{}}}],["libs/src/lib/store/state/label.state.ts:40",{"_index":301,"title":{},"body":{"injectables/LabelState.html":{}}}],["literal",{"_index":604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":390,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["load(tableid",{"_index":395,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["lodash",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["logdata",{"_index":225,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["logdata(apiendpoint",{"_index":227,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["loggedin",{"_index":334,"title":{},"body":{"injectables/RequestService.html":{}}}],["luck",{"_index":445,"title":{},"body":{"injectables/TextService.html":{}}}],["map",{"_index":402,"title":{},"body":{"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["map((labels",{"_index":449,"title":{},"body":{"injectables/TextService.html":{}}}],["map((res",{"_index":419,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["map([['x",{"_index":262,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["mask",{"_index":617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":38,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["method",{"_index":229,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{}}}],["methods",{"_index":154,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"dependencies.html":{}}}],["middle",{"_index":191,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["middlename",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":538,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/label",{"_index":162,"title":{},"body":{"injectables/FakeLabelService.html":{},"interfaces/ILabelService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TextService.html":{}}}],["model/lib.model",{"_index":247,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"injectables/TextService.html":{}}}],["model/table",{"_index":406,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["modifyconfig",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":39,"title":{"modules/AscSharedLibsModule.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["modules",{"_index":41,"title":{"modules.html":{}},"body":{"modules/AscSharedLibsModule.html":{},"modules.html":{}}}],["move",{"_index":583,"title":{},"body":{"todo.html":{}}}],["multiple",{"_index":204,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["multiselect",{"_index":610,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["multiselectmodule",{"_index":98,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"miscellaneous/functions.html":{}}}],["name.equals",{"_index":417,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["need",{"_index":576,"title":{},"body":{"todo.html":{}}}],["never",{"_index":398,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["new",{"_index":170,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"coverage.html":{}}}],["ng",{"_index":139,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["ngmodule",{"_index":54,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxs/devtools",{"_index":86,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxs/logger",{"_index":89,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":84,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TextService.html":{},"dependencies.html":{}}}],["ngxsloggerpluginmodule",{"_index":88,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":102,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxsmodule",{"_index":82,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxsmodule.forroot([labelstate",{"_index":101,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxsreduxdevtoolspluginmodule",{"_index":85,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["ngxsreduxdevtoolspluginmodule.forroot",{"_index":103,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["number",{"_index":609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["object.getownpropertynames(data).foreach((key",{"_index":370,"title":{},"body":{"injectables/RequestService.html":{}}}],["observable",{"_index":157,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["observable((observer",{"_index":258,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["observe",{"_index":364,"title":{},"body":{"injectables/RequestService.html":{}}}],["observer.complete",{"_index":266,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["observer.next",{"_index":259,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["oninit",{"_index":123,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["only.p",{"_index":145,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["optional",{"_index":236,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"miscellaneous/functions.html":{}}}],["optionlabel",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":232,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"index.html":{}}}],["options.rawbody",{"_index":366,"title":{},"body":{"injectables/RequestService.html":{}}}],["out",{"_index":52,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["overview",{"_index":565,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":141,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["package",{"_index":487,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paging",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagingtype",{"_index":599,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pagingtypeschema",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagingtypeschema.optional",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":234,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":368,"title":{},"body":{"injectables/RequestService.html":{}}}],["params.set(key",{"_index":371,"title":{},"body":{"injectables/RequestService.html":{}}}],["parseddata",{"_index":420,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["patch",{"_index":607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload",{"_index":277,"title":{},"body":{"classes/GetLabels.html":{}}}],["pipe",{"_index":418,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["pipe(retry(1",{"_index":367,"title":{},"body":{"injectables/RequestService.html":{}}}],["placeholder",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholderid",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin",{"_index":87,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"dependencies.html":{}}}],["post",{"_index":605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["primeflex",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["primeng/button",{"_index":69,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/checkbox",{"_index":81,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/dropdown",{"_index":95,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/fileupload",{"_index":75,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/inputtext",{"_index":67,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/multiselect",{"_index":99,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/ripple",{"_index":71,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/speeddial",{"_index":79,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/table",{"_index":65,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/tag",{"_index":97,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/toolbar",{"_index":73,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["primeng/tooltip",{"_index":77,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["private",{"_index":223,"title":{},"body":{"injectables/FakeRequestService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"dependencies.html":{}}}],["projects/.../fake",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../label",{"_index":598,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../lib.model.ts",{"_index":593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../table",{"_index":595,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../utils.ts",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/asc",{"_index":8,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":222,"title":{"properties.html":{}},"body":{"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"properties.html":{}}}],["proposal",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["providedin",{"_index":115,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["purpose",{"_index":168,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{}}}],["purposes",{"_index":274,"title":{},"body":{"classes/GetLabels.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["query",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quill",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["radio",{"_index":611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["raf",{"_index":558,"title":{},"body":{"index.html":{}}}],["rawbody",{"_index":347,"title":{},"body":{"injectables/RequestService.html":{}}}],["reactiveformsmodule",{"_index":57,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["readonly",{"_index":271,"title":{},"body":{"classes/GetLabels.html":{}}}],["reallabelservice",{"_index":292,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["reason",{"_index":577,"title":{},"body":{"todo.html":{}}}],["ref",{"_index":186,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["reference",{"_index":212,"title":{},"body":{"injectables/FakeLabelService.html":{},"classes/GetLabels.html":{}}}],["refid",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":226,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["request(apiendpoint",{"_index":239,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{}}}],["request(this.env.apiurl",{"_index":415,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["request.service",{"_index":404,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["request.service.ts",{"_index":221,"title":{},"body":{"injectables/FakeRequestService.html":{},"coverage.html":{}}}],["request.service.ts:11",{"_index":244,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["request.service.ts:13",{"_index":240,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["request.service.ts:37",{"_index":233,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["request/fake",{"_index":403,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["request/request.service",{"_index":401,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["requestservice",{"_index":332,"title":{"injectables/RequestService.html":{}},"body":{"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"coverage.html":{}}}],["reset",{"_index":51,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}],["resizable",{"_index":572,"title":{},"body":{"todo.html":{}}}],["respdata",{"_index":251,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["response",{"_index":373,"title":{},"body":{"injectables/RequestService.html":{}}}],["responsetype",{"_index":362,"title":{},"body":{"injectables/RequestService.html":{}}}],["restapi",{"_index":394,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["results",{"_index":37,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":356,"title":{},"body":{"injectables/RequestService.html":{}}}],["return",{"_index":165,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["returns",{"_index":156,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"miscellaneous/functions.html":{}}}],["rgbcolor",{"_index":561,"title":{},"body":{"index.html":{}}}],["right",{"_index":138,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["ripplemodule",{"_index":70,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["root",{"_index":116,"title":{},"body":{"injectables/AscSharedLibsService.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"injectables/LabelService.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["rounded",{"_index":146,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["route",{"_index":231,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{}}}],["route.includes('account",{"_index":256,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["route.includes('app",{"_index":252,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["row",{"_index":173,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["rows",{"_index":177,"title":{},"body":{"injectables/FakeLabelService.html":{},"todo.html":{}}}],["rowsperpage",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":160,"title":{},"body":{"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"dependencies.html":{}}}],["saver",{"_index":507,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["search",{"_index":198,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["select",{"_index":202,"title":{},"body":{"injectables/FakeLabelService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["select(labelstate.getlabels",{"_index":446,"title":{},"body":{"injectables/TextService.html":{}}}],["selected",{"_index":176,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["separate",{"_index":586,"title":{},"body":{"todo.html":{}}}],["server",{"_index":382,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{}}}],["services/label/fake",{"_index":308,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["services/label/label.service",{"_index":307,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["setloggedin",{"_index":337,"title":{},"body":{"injectables/RequestService.html":{}}}],["setloggedin(loggedin",{"_index":349,"title":{},"body":{"injectables/RequestService.html":{}}}],["setstate",{"_index":320,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["settings",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared",{"_index":9,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":189,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["shortname",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showaddbutton",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdeletebutton",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showeditbutton",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showing",{"_index":180,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["side",{"_index":380,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["softdelete",{"_index":582,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["sort",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"modules/AscSharedLibsModule.html":{},"injectables/AscSharedLibsService.html":{},"components/BaseTableComponent.html":{},"injectables/FakeLabelService.html":{},"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/ILabelService.html":{},"interfaces/IRequestService.html":{},"injectables/LabelService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{}}}],["sourceurl",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":133,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["speeddialmodule",{"_index":78,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["started",{"_index":545,"title":{"index.html":{},"todo.html":{}},"body":{}}],["state",{"_index":297,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TextService.html":{}}}],["state.labels",{"_index":318,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["state.labels.labels",{"_index":451,"title":{},"body":{"injectables/TextService.html":{}}}],["statecontext",{"_index":299,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["statements",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["states?size=20",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static",{"_index":270,"title":{},"body":{"classes/GetLabels.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["status",{"_index":196,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["store",{"_index":83,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"injectables/TextService.html":{}}}],["store/actions/label.action",{"_index":93,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["store/state/label.state",{"_index":91,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["string",{"_index":228,"title":{},"body":{"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":21,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["styleurls",{"_index":119,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["support",{"_index":562,"title":{},"body":{"modules.html":{}}}],["suppress",{"_index":548,"title":{},"body":{"index.html":{}}}],["svg",{"_index":563,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["switched",{"_index":439,"title":{},"body":{"injectables/TextService.html":{}}}],["table",{"_index":34,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{},"injectables/FakeRequestService.html":{},"injectables/TableConfigService.html":{},"coverage.html":{}}}],["table.component",{"_index":63,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["table.component.html",{"_index":122,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["table.component.scss",{"_index":120,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["table.component.ts",{"_index":118,"title":{},"body":{"components/BaseTableComponent.html":{},"coverage.html":{}}}],["table/base",{"_index":62,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"components/BaseTableComponent.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tablecolumnschema",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableconfigservice",{"_index":387,"title":{"injectables/TableConfigService.html":{}},"body":{"injectables/TableConfigService.html":{},"coverage.html":{}}}],["tablefilter",{"_index":601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tablefilterschema",{"_index":479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablefilterschema.optional",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tableid",{"_index":397,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["tablemodule",{"_index":64,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["tablesettings",{"_index":602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tablesettingsschema",{"_index":480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["tableviewconfig",{"_index":405,"title":{},"body":{"injectables/TableConfigService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tableviewconfigschema",{"_index":407,"title":{},"body":{"injectables/TableConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableviewconfigschema.parse(parseddata",{"_index":422,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["tagmodule",{"_index":96,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["tap",{"_index":310,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["tap((labelconfig",{"_index":322,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["template",{"_index":20,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["templateurl",{"_index":121,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["testaccountpurposedata",{"_index":224,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["testbasetabledata",{"_index":248,"title":{},"body":{"injectables/FakeRequestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":608,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["textarea",{"_index":613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["textservice",{"_index":423,"title":{"injectables/TextService.html":{}},"body":{"injectables/TextService.html":{},"coverage.html":{}}}],["this.applylabel(data",{"_index":450,"title":{},"body":{"injectables/TextService.html":{}}}],["this.env",{"_index":413,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.env.ismockenabled",{"_index":408,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.environment.ismockenabled",{"_index":315,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["this.fakelabelservice",{"_index":316,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["this.fakerequestservice",{"_index":409,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.get(apiendpoint",{"_index":360,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.getlabelsfromstate",{"_index":447,"title":{},"body":{"injectables/TextService.html":{}}}],["this.http",{"_index":365,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.http.request(method",{"_index":361,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.labelservice.getlabels().pipe",{"_index":321,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["this.logdata(apiendpoint",{"_index":250,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["this.loggedin",{"_index":358,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.reallabelservice",{"_index":317,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{}}}],["this.requestservice",{"_index":414,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.restapi",{"_index":410,"title":{},"body":{"injectables/TableConfigService.html":{}}}],["this.store.dispatch(new",{"_index":107,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["this.store.select",{"_index":440,"title":{},"body":{"injectables/TextService.html":{}}}],["this.testaccountpurposedata",{"_index":257,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["this.token",{"_index":359,"title":{},"body":{"injectables/RequestService.html":{}}}],["throw",{"_index":327,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["throwerror",{"_index":357,"title":{},"body":{"injectables/RequestService.html":{}}}],["till",{"_index":442,"title":{},"body":{"injectables/TextService.html":{}}}],["title",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tocamelcase",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tocamelcase(input",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":436,"title":{"todo.html":{}},"body":{"injectables/TextService.html":{},"todo.html":{}}}],["token",{"_index":335,"title":{},"body":{"injectables/RequestService.html":{}}}],["toolbarmodule",{"_index":72,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["tooltipmodule",{"_index":76,"title":{},"body":{"modules/AscSharedLibsModule.html":{}}}],["total",{"_index":263,"title":{},"body":{"injectables/FakeRequestService.html":{}}}],["totalrecords",{"_index":183,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["transaction",{"_index":195,"title":{},"body":{"injectables/FakeLabelService.html":{}}}],["transformdata",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["true",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trxnstatus",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":323,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["ts",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":235,"title":{},"body":{"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"interfaces/IRequestService.html":{},"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"injectables/TableConfigService.html":{},"injectables/TextService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":591,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":369,"title":{},"body":{"injectables/RequestService.html":{}}}],["updateddata",{"_index":452,"title":{},"body":{"injectables/TextService.html":{}}}],["updateddata[key",{"_index":459,"title":{},"body":{"injectables/TextService.html":{}}}],["url",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["validation",{"_index":329,"title":{},"body":{"injectables/LabelState.html":{},"classes/LabelStateModel.html":{},"injectables/TableConfigService.html":{}}}],["value",{"_index":242,"title":{},"body":{"injectables/FakeRequestService.html":{},"classes/GetLabels.html":{},"classes/LabelStateModel.html":{},"injectables/RequestService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":28,"title":{},"body":{"components/AscSharedLibsComponent.html":{},"components/BaseTableComponent.html":{}}}],["variable",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":412,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/TableConfigService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":569,"title":{},"body":{"properties.html":{}}}],["void",{"_index":238,"title":{},"body":{"injectables/FakeRequestService.html":{},"injectables/RequestService.html":{}}}],["warnings",{"_index":549,"title":{},"body":{"index.html":{}}}],["width",{"_index":149,"title":{},"body":{"components/BaseTableComponent.html":{},"todo.html":{}}}],["working",{"_index":438,"title":{},"body":{"injectables/TextService.html":{},"todo.html":{}}}],["wrapper",{"_index":128,"title":{},"body":{"components/BaseTableComponent.html":{}}}],["xlsx",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":241,"title":{},"body":{"injectables/FakeRequestService.html":{},"interfaces/IRequestService.html":{},"injectables/RequestService.html":{}}}],["z.array(tablecolumnschema",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.boolean().optional",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"boolean",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"calendar",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"checkbox",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"chips",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"client",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"color",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"editor",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"knob",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"mask",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"multiselect",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"number",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"radio",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"select",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"server",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"switch",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"text",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.literal(\"textarea",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.object",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(z.any()).optional",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.record(z.string",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().optional",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.union",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":50,"title":{},"body":{"modules/AscSharedLibsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AscSharedLibsComponent.html":{"url":"components/AscSharedLibsComponent.html","title":"component - AscSharedLibsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AscSharedLibsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/asc-shared-libs/src/lib/asc-shared-libs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-asc-shared-libs\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-asc-shared-libs',\n  template: ``,\n  styles: [],\n})\nexport class AscSharedLibsComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AscSharedLibsComponent', 'selector': 'lib-asc-shared-libs'},{'name': 'BaseTableComponent', 'selector': 'lib-base-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AscSharedLibsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AscSharedLibsModule.html":{"url":"modules/AscSharedLibsModule.html","title":"module - AscSharedLibsModule","body":"\n                   \n\n\n\n\n    Modules\n    AscSharedLibsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AscSharedLibsModule\n\n\n\ncluster_AscSharedLibsModule_declarations\n\n\n\ncluster_AscSharedLibsModule_exports\n\n\n\n\nAscSharedLibsComponent\n\nAscSharedLibsComponent\n\n\n\nAscSharedLibsModule\n\nAscSharedLibsModule\n\nAscSharedLibsModule -->\n\nAscSharedLibsComponent->AscSharedLibsModule\n\n\n\n\n\nBaseTableComponent\n\nBaseTableComponent\n\nAscSharedLibsModule -->\n\nBaseTableComponent->AscSharedLibsModule\n\n\n\n\n\nAscSharedLibsComponent \n\nAscSharedLibsComponent \n\nAscSharedLibsComponent  -->\n\nAscSharedLibsModule->AscSharedLibsComponent \n\n\n\n\n\nBaseTableComponent \n\nBaseTableComponent \n\nBaseTableComponent  -->\n\nAscSharedLibsModule->BaseTableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/asc-shared-libs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AscSharedLibsComponent\n                        \n                        \n                            BaseTableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AscSharedLibsComponent\n                        \n                        \n                            BaseTableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AscSharedLibsComponent } from './asc-shared-libs.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BaseTableComponent } from './base-table/base-table.component';\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { SpeedDialModule } from 'primeng/speeddial';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { NgxsModule, Store } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { LabelState } from './store/state/label.state';\nimport { GetLabels } from './store/actions/label.action';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { TagModule } from 'primeng/tag';\nimport { MultiSelectModule } from 'primeng/multiselect';\n\n@NgModule({\n  declarations: [AscSharedLibsComponent, BaseTableComponent],\n  imports: [\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    TableModule,\n    InputTextModule,\n    ButtonModule,\n    RippleModule,\n    ToolbarModule,\n    FileUploadModule,\n    TooltipModule,\n    SpeedDialModule,\n    CheckboxModule,\n    NgxsModule.forRoot([LabelState]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    DropdownModule,\n    FormsModule,\n    TagModule,\n    MultiSelectModule,\n  ],\n  exports: [AscSharedLibsComponent, BaseTableComponent],\n})\nexport class AscSharedLibsModule {\n  constructor(private store: Store) {\n    console.info('Dispatching labels...');\n    this.store.dispatch(new GetLabels());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AscSharedLibsService.html":{"url":"injectables/AscSharedLibsService.html","title":"injectable - AscSharedLibsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AscSharedLibsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/asc-shared-libs.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/asc-shared-libs/src/lib/asc-shared-libs.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AscSharedLibsService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseTableComponent.html":{"url":"components/BaseTableComponent.html","title":"component - BaseTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/asc-shared-libs/src/lib/base-table/base-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-base-table\n            \n\n\n\n            \n                styleUrls\n                ./base-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./base-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-base-table',\n  templateUrl: './base-table.component.html',\n  styleUrls: ['./base-table.component.scss'],\n})\nexport class BaseTableComponent {}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./base-table.component.scss\n                \n                @import \"../common/scss/variables\";\n\n:host {\n  & .caption-default {\n    &-wrapper {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    &-right {\n      display: flex;\n    }\n  }\n\n  &::ng-deep {\n    & .p-button.p-button-icon-only.p-button-rounded {\n      height: 2rem;\n      width: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AscSharedLibsComponent', 'selector': 'lib-asc-shared-libs'},{'name': 'BaseTableComponent', 'selector': 'lib-base-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeLabelService.html":{"url":"injectables/FakeLabelService.html","title":"injectable - FakeLabelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FakeLabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/label/fake-label.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLabels\n                        \n                    \n                \n            \n            \n                \ngetLabels()\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/label/fake-label.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ILabelService } from './ilabel.service';\nimport { Observable, of } from 'rxjs';\nimport { LabelConfig } from '../../model/label-config.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FakeLabelService implements ILabelService {\n  getLabels(): Observable {\n    return of({\n      L_ACCOUNT_PURPOSE: 'Account Purpose',\n      L_NEW: 'New',\n      L_NEW_TOOLTIP: 'Add new row',\n      L_DELETE_ALL_SELECTED: 'Delete all selected rows',\n      L_EXPORT: 'Export',\n      L_CURRENT_PAGE_REPORT_TEMPLATE:\n        'Showing {first} to {last} of {totalRecords} entries',\n      L_REF_ID: 'Ref Id',\n      L_ACCOUNT_PURPOSE_SHORT_NAME: 'Short Name',\n      L_ACCOUNT_PURPOSE_MIDDLE_NAME: 'Middle Name',\n      L_ACCOUNT_PURPOSE_FULL_NAME: 'Full Name',\n      L_TRXN_STATUS: 'Transaction Status',\n      L_GLOBAL_SEARCH: 'Search keyword',\n      L_SEARCH: 'Search',\n      L_SELECT: 'Select',\n      L_SELECT_MULTIPLE: 'Select multiple',\n      L_DEFAULT_EMPTY_MESSAGE: 'No data found',\n      L_SELECTED_ONLY: 'Selected only',\n      L_IS_ACTIVE: 'Is Active',\n      L_REFERENCE_NAME: 'Reference Name',\n      L_ENTER_REFERENCE_NAME: 'Enter reference name',\n      L_ENTER_SHORT_NAME: 'Enter short name',\n      L_ENTER_MIDDLE_NAME: 'Enter middle name',\n      L_ENTER_FULL_NAME: 'Enter full name',\n      L_ENTER_TRXN_STATUS: 'Enter transaction status',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeRequestService.html":{"url":"injectables/FakeRequestService.html","title":"injectable - FakeRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FakeRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/request/fake-request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                testAccountPurposeData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logData\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        logData\n                        \n                    \n                \n            \n            \n                \n                    \n                    logData(apiEndpoint: string, method: HttpVerbs, route: string, data: any, options: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/fake-request.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                HttpVerbs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n            \n                \nrequest(apiEndpoint: string, method: HttpVerbs, route: string, data?: any, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/fake-request.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                HttpVerbs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testAccountPurposeData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getAccountPurposeData()\n                    \n                \n                    \n                        \n                                Defined in projects/asc-shared-libs/src/lib/services/request/fake-request.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IRequestService } from './irequest.service';\nimport { Observable } from 'rxjs';\nimport { HttpVerbs } from '../../model/lib.model';\nimport { getAccountPurposeData, testBaseTableData } from './fake-request-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FakeRequestService implements IRequestService {\n  private testAccountPurposeData = getAccountPurposeData();\n\n  request(\n    apiEndpoint: string,\n    method: HttpVerbs,\n    route: string,\n    data?: any,\n    options?: any\n  ): Observable {\n    this.logData(apiEndpoint, method, route, data, options);\n    let respData: any;\n    if (route.includes('app-table-designs')) {\n      respData = [{ definition: JSON.stringify(testBaseTableData) }];\n    } else if (route.includes('account-purpose')) {\n      respData = this.testAccountPurposeData;\n    }\n\n    return new Observable((observer) => {\n      observer.next({\n        body: respData,\n        headers: new Map([['x-total-count', 100]]),\n      });\n      observer.complete();\n    });\n  }\n\n  private logData(\n    apiEndpoint: string,\n    method: HttpVerbs,\n    route: string,\n    data: any,\n    options: any\n  ) {\n    console.log(\n      'FakeRequestService: apiEndpoint: ',\n      apiEndpoint,\n      ' method: ',\n      method,\n      ' route: ',\n      route,\n      ' data: ',\n      data,\n      ' options: ',\n      options\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetLabels.html":{"url":"classes/GetLabels.html","title":"class - GetLabels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetLabels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/store/actions/label.action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Label] Get'\n                    \n                \n                    \n                        \n                                Defined in projects/asc-shared-libs/src/lib/store/actions/label.action.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetLabels {\n  static readonly type = '[Label] Get';\n}\n\n// For reference purposes only\n/**\n    export class AddLabel {\n      static readonly type = '[Label] Add';\n      constructor(public payload: LabelConfig) {}\n    }\n */\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelService.html":{"url":"interfaces/ILabelService.html","title":"interface - ILabelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/label/ilabel.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getLabels\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLabels\n                        \n                    \n                \n            \n            \n                \ngetLabels()\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/label/ilabel.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { LabelConfig } from '../../model/label-config.model';\n\nexport interface ILabelService {\n  getLabels(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestService.html":{"url":"interfaces/IRequestService.html","title":"interface - IRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/request/irequest.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        request\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n            \n                \nrequest(apiEndpoint: string, method: HttpVerbs, route: string, data?: any, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/irequest.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                HttpVerbs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { HttpVerbs } from '../../model/lib.model';\n\nexport interface IRequestService {\n  request(\n    apiEndpoint: string,\n    method: HttpVerbs,\n    route: string,\n    data?: any,\n    options?: any\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelService.html":{"url":"injectables/LabelService.html","title":"injectable - LabelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/label/label.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLabels\n                        \n                    \n                \n            \n            \n                \ngetLabels()\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/label/label.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ILabelService } from './ilabel.service';\nimport { Observable, of } from 'rxjs';\nimport { LabelConfig } from '../../model/label-config.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LabelService implements ILabelService {\n  getLabels(): Observable {\n    return of({});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelState.html":{"url":"injectables/LabelState.html","title":"injectable - LabelState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LabelState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/store/state/label.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Static\n                                getLabels\n                            \n                            \n                                    \n                                getLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    labelService\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(realLabelService: LabelService, fakeLabelService: FakeLabelService, environment: any)\n                    \n                \n                        \n                            \n                                Defined in projects/asc-shared-libs/src/lib/store/state/label.state.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        realLabelService\n                                                  \n                                                        \n                                                                        LabelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fakeLabelService\n                                                  \n                                                        \n                                                                        FakeLabelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        getLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabels(state: LabelStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/store/state/label.state.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                LabelStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LabelConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabels(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(GetLabels)\n                \n            \n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/store/state/label.state.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        labelService\n                    \n                \n\n                \n                    \n                        getlabelService()\n                    \n                \n                            \n                                \n                                    Defined in projects/asc-shared-libs/src/lib/store/state/label.state.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { LabelConfig } from '../../model/label-config.model';\nimport { Inject, Injectable } from '@angular/core';\nimport { GetLabels } from '../actions/label.action';\nimport { LabelService } from '../../services/label/label.service';\nimport { FakeLabelService } from '../../services/label/fake-label.service';\nimport { tap } from 'rxjs';\nimport { labelConfigSchema } from '../../model/label-config.schema';\n\nexport class LabelStateModel {\n  labels: LabelConfig = {};\n}\n\n@State({\n  name: 'labels',\n  defaults: {\n    labels: {},\n  },\n})\n@Injectable()\nexport class LabelState {\n  constructor(\n    private realLabelService: LabelService,\n    private fakeLabelService: FakeLabelService,\n    @Inject('environment') private environment: any\n  ) {}\n\n  get labelService(): LabelService | FakeLabelService {\n    return this.environment.isMockEnabled\n      ? this.fakeLabelService\n      : this.realLabelService;\n  }\n\n  @Selector()\n  static getLabels(state: LabelStateModel) {\n    return state.labels;\n  }\n\n  @Action(GetLabels)\n  getLabels({ getState, setState }: StateContext) {\n    return this.labelService.getLabels().pipe(\n      tap((labelConfig) => {\n        try {\n          labelConfigSchema.parse(labelConfig);\n        } catch (error) {\n          throw new Error(`Data validation error: ${error}`);\n        }\n        const state = getState();\n        setState({\n          ...state,\n          labels: labelConfig,\n        });\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LabelStateModel.html":{"url":"classes/LabelStateModel.html","title":"class - LabelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LabelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/store/state/label.state.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                labels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/asc-shared-libs/src/lib/store/state/label.state.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { LabelConfig } from '../../model/label-config.model';\nimport { Inject, Injectable } from '@angular/core';\nimport { GetLabels } from '../actions/label.action';\nimport { LabelService } from '../../services/label/label.service';\nimport { FakeLabelService } from '../../services/label/fake-label.service';\nimport { tap } from 'rxjs';\nimport { labelConfigSchema } from '../../model/label-config.schema';\n\nexport class LabelStateModel {\n  labels: LabelConfig = {};\n}\n\n@State({\n  name: 'labels',\n  defaults: {\n    labels: {},\n  },\n})\n@Injectable()\nexport class LabelState {\n  constructor(\n    private realLabelService: LabelService,\n    private fakeLabelService: FakeLabelService,\n    @Inject('environment') private environment: any\n  ) {}\n\n  get labelService(): LabelService | FakeLabelService {\n    return this.environment.isMockEnabled\n      ? this.fakeLabelService\n      : this.realLabelService;\n  }\n\n  @Selector()\n  static getLabels(state: LabelStateModel) {\n    return state.labels;\n  }\n\n  @Action(GetLabels)\n  getLabels({ getState, setState }: StateContext) {\n    return this.labelService.getLabels().pipe(\n      tap((labelConfig) => {\n        try {\n          labelConfigSchema.parse(labelConfig);\n        } catch (error) {\n          throw new Error(`Data validation error: ${error}`);\n        }\n        const state = getState();\n        setState({\n          ...state,\n          labels: labelConfig,\n        });\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/request/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                get\n                            \n                            \n                                handleError\n                            \n                            \n                                request\n                            \n                            \n                                setLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(apiEndpoint: string, route: string, data?: any, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n            \n                \nrequest(apiEndpoint: string, method: HttpVerbs, route: string, data?: any, options: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    apiEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    method\n                                    \n                                                HttpVerbs\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    route\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { rawBody: false }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoggedIn\n                        \n                    \n                \n            \n            \n                \nsetLoggedIn(loggedIn: boolean, token?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedIn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/asc-shared-libs/src/lib/services/request/request.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { catchError, Observable, retry, throwError } from 'rxjs';\nimport { IRequestService } from './irequest.service';\nimport { HttpVerbs } from '../../model/lib.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestService implements IRequestService {\n  private loggedIn = false;\n  private token?: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  setLoggedIn(loggedIn: boolean, token?: string): void {\n    this.loggedIn = loggedIn;\n    this.token = token;\n  }\n\n  request(\n    apiEndpoint: string,\n    method: HttpVerbs,\n    route: string,\n    data?: any,\n    options: any = { rawBody: false }\n  ): Observable {\n    if (method === 'GET') {\n      return this.get(apiEndpoint, route, data, options);\n    }\n\n    if (method === 'DELETE') {\n      return this.http.request(method, apiEndpoint + route, {\n        responseType: 'json',\n        observe: 'body',\n      });\n    }\n\n    return this.http\n      .request(\n        method,\n        apiEndpoint + route,\n        options.rawBody\n          ? data\n          : {\n              body: data,\n              responseType: 'json',\n              observe: 'body',\n            }\n      )\n      .pipe(retry(1));\n  }\n\n  private get(\n    apiEndpoint: string,\n    route: string,\n    data?: any,\n    options?: any\n  ): Observable {\n    let params = new HttpParams();\n    if (data !== undefined) {\n      Object.getOwnPropertyNames(data).forEach((key) => {\n        params = params.set(key, data[key]);\n      });\n    }\n\n    return this.http\n      .get(apiEndpoint + route, {\n        ...options,\n        params,\n        observe: 'response',\n      })\n      .pipe(retry(1), catchError(this.handleError));\n  }\n\n  handleError(error: any): any {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(() => new Error(errorMessage));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableConfigService.html":{"url":"injectables/TableConfigService.html","title":"injectable - TableConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/table-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    requestService\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(restApi: RequestService, fakeRequestService: FakeRequestService, env: any)\n                    \n                \n                        \n                            \n                                Defined in projects/asc-shared-libs/src/lib/services/table-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        restApi\n                                                  \n                                                        \n                                                                        RequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fakeRequestService\n                                                  \n                                                        \n                                                                        FakeRequestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(tableId: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/table-config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        requestService\n                    \n                \n\n                \n                    \n                        getrequestService()\n                    \n                \n                            \n                                \n                                    Defined in projects/asc-shared-libs/src/lib/services/table-config.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { RequestService } from './request/request.service';\nimport { map, Observable } from 'rxjs';\nimport { FakeRequestService } from './request/fake-request.service';\nimport { TableViewConfig } from '../model/table-config.model';\nimport { tableViewConfigSchema } from '../model/table-config.schema';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableConfigService {\n  constructor(\n    private restApi: RequestService,\n    private fakeRequestService: FakeRequestService,\n    @Inject('environment') private env: any\n  ) {}\n\n  get requestService() {\n    return this.env.isMockEnabled ? this.fakeRequestService : this.restApi;\n  }\n\n  load(tableId: string): Observable | never {\n    console.log('Environment variables:', this.env);\n    return this.requestService\n      .request(this.env.apiUrl, 'GET', '/api/v5/app-table-designs', {\n        'name.equals': tableId,\n      })\n      .pipe(\n        map((res: any) => {\n          try {\n            const parsedData = JSON.parse(res.body[0]['definition']);\n            return tableViewConfigSchema.parse(parsedData) as TableViewConfig;\n          } catch (error) {\n            throw new Error(`Data validation error: ${error}`);\n          }\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextService.html":{"url":"injectables/TextService.html","title":"injectable - TextService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/asc-shared-libs/src/lib/services/text.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyLabel\n                            \n                            \n                                convert\n                            \n                            \n                                    Private\n                                getLabelsFromState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/asc-shared-libs/src/lib/services/text.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyLabel\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyLabel(data: GeneralText, labels: LabelConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/text.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GeneralText\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    labels\n                                    \n                                                LabelConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeneralText\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convert\n                        \n                    \n                \n            \n            \n                \nconvert(data: GeneralText)\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/text.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GeneralText\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getLabelsFromState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabelsFromState()\n                \n            \n\n\n            \n                \n                    Defined in projects/asc-shared-libs/src/lib/services/text.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map, Observable, of } from 'rxjs';\nimport { GeneralText } from '../model/lib.model';\nimport { Store } from '@ngxs/store';\nimport { LabelConfig } from '../model/label-config.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TextService {\n  constructor(private store: Store) {}\n\n  // TODO: Why isn't this working?\n  // Switched to this.store.select() in convert() below, till we get the answer (Best of Luck!)\n  // @Select(LabelState.getLabels) labels$!: Observable;\n\n  convert(data: GeneralText): Observable {\n    const labels$ = this.getLabelsFromState();\n\n    return labels$.pipe(\n      map((labels) => {\n        return this.applyLabel(data, labels);\n      })\n    );\n  }\n\n  private getLabelsFromState() {\n    return this.store.select(\n      (state) => state.labels.labels\n    ) as Observable;\n  }\n\n  private applyLabel(data: GeneralText, labels: LabelConfig) {\n    const updatedData: GeneralText = {};\n\n    for (const key in data) {\n      if (data.hasOwnProperty(key)) {\n        const labelId = data[key].labelId;\n        const labelValue = labels[labelId] || labelId;\n\n        updatedData[key] = {\n          ...data[key],\n          label: labelValue,\n        };\n      }\n    }\n\n    return updatedData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/asc-shared-libs/src/lib/asc-shared-libs.component.ts\n            \n            component\n            AscSharedLibsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/asc-shared-libs.service.ts\n            \n            injectable\n            AscSharedLibsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/base-table/base-table.component.ts\n            \n            component\n            BaseTableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/common/utils.ts\n            \n            function\n            destroy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/common/utils.ts\n            \n            function\n            toCamelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/label-config.schema.ts\n            \n            variable\n            labelConfigSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            inputFieldSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            inputTypeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            pagingTypeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            tableColumnSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            tableFilterSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            tableSettingsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n            \n            variable\n            tableViewConfigSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/label/fake-label.service.ts\n            \n            injectable\n            FakeLabelService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/label/ilabel.service.ts\n            \n            interface\n            ILabelService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/label/label.service.ts\n            \n            injectable\n            LabelService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/request/fake-request-data.ts\n            \n            function\n            getAccountPurposeData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/request/fake-request-data.ts\n            \n            variable\n            testBaseTableData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/request/fake-request.service.ts\n            \n            injectable\n            FakeRequestService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/request/irequest.service.ts\n            \n            interface\n            IRequestService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/table-config.service.ts\n            \n            injectable\n            TableConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/services/text.service.ts\n            \n            injectable\n            TextService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/store/actions/label.action.ts\n            \n            class\n            GetLabels\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/store/state/label.state.ts\n            \n            class\n            LabelStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/asc-shared-libs/src/lib/store/state/label.state.ts\n            \n            injectable\n            LabelState\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.7\n        \n            @angular/cdk : ^16.1.6\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/material : ^16.1.6\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @babel/plugin-proposal-private-methods : ^7.18.6\n        \n            @compodoc/compodoc : ^1.1.21\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            canvg : ^4.0.1\n        \n            file-saver : ^2.0.5\n        \n            jspdf : ^2.5.1\n        \n            jspdf-autotable : ^3.5.31\n        \n            lodash-es : ^4.17.21\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^16.1.0\n        \n            quill : ^1.3.7\n        \n            rxjs : ~7.8.0\n        \n            ts-to-zod : ^3.1.3\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.0\n        \n            xlsx : https://cdn.sheetjs.com/xlsx-0.19.3/xlsx-0.19.3.tgz\n        \n            zod : ^3.21.4\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            destroy   (projects/.../utils.ts)\n                        \n                        \n                            getAccountPurposeData   (projects/.../fake-request-data.ts)\n                        \n                        \n                            toCamelCase   (projects/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/asc-shared-libs/src/lib/common/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCamelCase\n                        \n                    \n                \n            \n            \n                \ntoCamelCase(input: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/asc-shared-libs/src/lib/services/request/fake-request-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAccountPurposeData\n                        \n                    \n                \n            \n            \n                \ngetAccountPurposeData()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAscWorkspace\nAdd these to angular.json file to suppress warnings of CommonJS dependencies\n\"architect\": {\n  \"build\": {\n    \"builder\": \"@angular-devkit/build-angular:browser\",\n    \"options\": {\n      \"allowedCommonJsDependencies\": [\n        \"jspdf-autotable\",\n        \"jspdf\",\n        \"file-saver\",\n        \"raf\",\n        \"core-js\",\n        \"rgbcolor\"\n      ],\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AscSharedLibsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AscSharedLibsModule\n\n\n\ncluster_AscSharedLibsModule_declarations\n\n\n\ncluster_AscSharedLibsModule_exports\n\n\n\n\nAscSharedLibsComponent\n\nAscSharedLibsComponent\n\n\n\nAscSharedLibsModule\n\nAscSharedLibsModule\n\nAscSharedLibsModule -->\n\nAscSharedLibsComponent->AscSharedLibsModule\n\n\n\n\n\nBaseTableComponent\n\nBaseTableComponent\n\nAscSharedLibsModule -->\n\nBaseTableComponent->AscSharedLibsModule\n\n\n\n\n\nAscSharedLibsComponent \n\nAscSharedLibsComponent \n\nAscSharedLibsComponent  -->\n\nAscSharedLibsModule->AscSharedLibsComponent \n\n\n\n\n\nBaseTableComponent \n\nBaseTableComponent \n\nBaseTableComponent  -->\n\nAscSharedLibsModule->BaseTableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODO\n\nFix resizable columns\nAdd draggable rows\nAdd frozen rows (need reason)\nColumnResizeMode not working\nAdd import functionality\nFix excel export header\nAdd dynamic softDelete key\nFix width of all columns\nMove cell editor to a separate component\nadd duplicate check for the columns\nAdd date filter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GeneralText   (projects/.../lib.model.ts)\n                        \n                        \n                            HttpVerbs   (projects/.../lib.model.ts)\n                        \n                        \n                            InputField   (projects/.../table-config.model.ts)\n                        \n                        \n                            InputType   (projects/.../table-config.model.ts)\n                        \n                        \n                            LabelConfig   (projects/.../label-config.model.ts)\n                        \n                        \n                            PagingType   (projects/.../table-config.model.ts)\n                        \n                        \n                            TableColumn   (projects/.../table-config.model.ts)\n                        \n                        \n                            TableFilter   (projects/.../table-config.model.ts)\n                        \n                        \n                            TableSettings   (projects/.../table-config.model.ts)\n                        \n                        \n                            TableViewConfig   (projects/.../table-config.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/asc-shared-libs/src/lib/model/lib.model.ts\n    \n    \n        \n            \n                \n                    \n                    GeneralText\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpVerbs\n                \n            \n            \n                \n                        \"GET\" | \"DELETE\" | \"POST\" | \"PUT\" | \"PATCH\"\n\n                \n            \n        \n    \n    projects/asc-shared-libs/src/lib/model/table-config.model.ts\n    \n    \n        \n            \n                \n                    \n                    InputField\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InputType\n                \n            \n            \n                \n                        \"text\" | \"number\" | \"select\" | \"multiselect\" | \"radio\" | \"checkbox\" | \"textarea\" | \"color\" | \"calendar\" | \"chips\" | \"editor\" | \"mask\" | \"switch\" | \"knob\" | \"select-button\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PagingType\n                \n            \n            \n                \n                        \"client-side\" | \"server-side\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableColumn\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableFilter\n                \n            \n            \n                \n                        \"text\" | \"select\" | \"multiselect\" | \"boolean\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableSettings\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TableViewConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/asc-shared-libs/src/lib/model/label-config.model.ts\n    \n    \n        \n            \n                \n                    \n                    LabelConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            inputFieldSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            inputTypeSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            labelConfigSchema   (projects/.../label-config.schema.ts)\n                        \n                        \n                            pagingTypeSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            tableColumnSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            tableFilterSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            tableSettingsSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            tableViewConfigSchema   (projects/.../table-config.schema.ts)\n                        \n                        \n                            testBaseTableData   (projects/.../fake-request-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/asc-shared-libs/src/lib/model/table-config.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inputFieldSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  type: inputTypeSchema,\n  placeholderId: z.string().optional(),\n  placeholder: z.string().optional(),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTypeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.union([\n  z.literal(\"text\"),\n  z.literal(\"number\"),\n  z.literal(\"select\"),\n  z.literal(\"multiselect\"),\n  z.literal(\"radio\"),\n  z.literal(\"checkbox\"),\n  z.literal(\"textarea\"),\n  z.literal(\"color\"),\n  z.literal(\"calendar\"),\n  z.literal(\"chips\"),\n  z.literal(\"editor\"),\n  z.literal(\"mask\"),\n  z.literal(\"switch\"),\n  z.literal(\"knob\"),\n  z.literal(\"select-button\"),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagingTypeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.union([\n  z.literal(\"client-side\"),\n  z.literal(\"server-side\"),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableColumnSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  field: z.string(),\n  headerId: z.string(),\n  header: z.string().optional(),\n  sort: z.boolean().optional(),\n  globalSearch: z.boolean().optional(),\n  filter: tableFilterSchema.optional(),\n  input: inputFieldSchema.optional(),\n  sourceUrl: z.string().optional(),\n  optionLabel: z.string().optional(),\n  translate: z.boolean().optional(),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableFilterSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.union([\n  z.literal(\"text\"),\n  z.literal(\"select\"),\n  z.literal(\"multiselect\"),\n  z.literal(\"boolean\"),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableSettingsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  url: z.string(),\n  title: z.string().optional(),\n  rowsPerPage: z.number().optional(),\n  globalSearch: z.boolean().optional(),\n  softDelete: z.boolean().optional(),\n  transformData: z.boolean().optional(),\n  modifyConfig: z.boolean().optional(),\n  export: z.boolean().optional(),\n  showAddButton: z.boolean().optional(),\n  firstColumnFrozen: z.boolean().optional(),\n  paging: z.boolean().optional(),\n  showEditButton: z.boolean().optional(),\n  showDeleteButton: z.boolean().optional(),\n  editUrl: z.string().optional(),\n  addUrl: z.string().optional(),\n  deleteUrl: z.boolean().optional(),\n  actionColumn: z.boolean().optional(),\n  editCallBack: z.boolean().optional(),\n  addCallBack: z.boolean().optional(),\n  query: z.record(z.any()).optional(),\n  pagingType: pagingTypeSchema.optional(),\n  lazy: z.boolean().optional(),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableViewConfigSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  settings: tableSettingsSchema,\n  columns: z.array(tableColumnSchema),\n})\n                    \n                \n\n\n        \n    \n\n    projects/asc-shared-libs/src/lib/model/label-config.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        labelConfigSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.record(z.string())\n                    \n                \n\n\n        \n    \n\n    projects/asc-shared-libs/src/lib/services/request/fake-request-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        testBaseTableData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableViewConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  settings: {\n    url: '/api/v5/account-purposes',\n    showEditButton: true,\n    showDeleteButton: true,\n    showAddButton: false,\n    title: 'L_ACCOUNT_PURPOSE',\n    transformData: true,\n    editCallBack: true,\n    addCallBack: true,\n    softDelete: true,\n    modifyConfig: true,\n    globalSearch: false,\n    export: false,\n  },\n  columns: [\n    { field: 'refId', headerId: 'L_REF_ID', sort: true, filter: 'text' },\n    {\n      field: 'shortName',\n      headerId: 'L_ACCOUNT_PURPOSE_SHORT_NAME',\n      sort: true,\n      globalSearch: true,\n      filter: 'select',\n      input: {\n        type: 'text',\n        placeholderId: 'L_ENTER_SHORT_NAME',\n      },\n    },\n    {\n      field: 'middleName',\n      headerId: 'L_ACCOUNT_PURPOSE_MIDDLE_NAME',\n      filter: 'multiselect',\n      sort: true,\n      input: {\n        type: 'multiselect',\n        placeholderId: 'L_ENTER_MIDDLE_NAME',\n      },\n    },\n    {\n      field: 'fullName',\n      headerId: 'L_ACCOUNT_PURPOSE_FULL_NAME',\n      sourceUrl: '/api/v5/work-flow-states?size=20',\n      optionLabel: 'desc',\n      input: {\n        type: 'select',\n        placeholderId: 'L_ENTER_FULL_NAME',\n      },\n    },\n    {\n      field: 'trxnStatus',\n      headerId: 'L_TRXN_STATUS',\n      globalSearch: true,\n      filter: 'select',\n      input: {\n        type: 'checkbox',\n        placeholderId: 'L_ENTER_TRXN_STATUS',\n      },\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
